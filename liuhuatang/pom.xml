<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.lht</groupId>
	<artifactId>liuhuatang</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>liuhuatang Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>4.3.3.RELEASE</spring.version>
		<spring.security.version>4.1.3.RELEASE</spring.security.version>
		<hibernate.version>4.2.21.Final</hibernate.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>3.4</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jfinal/jfinal-weixin -->
		<dependency>
		    <groupId>com.jfinal</groupId>
		    <artifactId>jfinal-weixin</artifactId>
		    <version>2.1</version>
		</dependency>
		<!-- web begin servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-databind</artifactId>
	      <version>2.4.3</version>
   		 </dependency>
	    <dependency>
	      <groupId>com.alibaba</groupId>
	      <artifactId>fastjson</artifactId>
	      <version>1.2.31</version>
	    </dependency>
	    <dependency>
	      <groupId>redis.clients</groupId>
	      <artifactId>jedis</artifactId>
	      <version>2.7.2</version>
	    </dependency>
	    <dependency>
	      <groupId>de.ruedigermoeller</groupId>
	      <artifactId>fst</artifactId>
	      <version>2.29</version>
	    </dependency>
	    <!-- okhttp2 -->
	    <dependency>
	      <groupId>com.squareup.okhttp</groupId>
	      <artifactId>okhttp</artifactId>
	      <version>2.7.5</version>
	    </dependency>
	    <!-- okhttp3 -->
	    <dependency>
	      <groupId>com.squareup.okhttp3</groupId>
	      <artifactId>okhttp</artifactId>
	      <version>3.6.0</version>
	    </dependency>
	    <dependency>
	      <groupId>com.squareup.okio</groupId>
	      <artifactId>okio</artifactId>
	      <version>1.11.0</version>
	    </dependency>
		<!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		    <version>2.5</version>
		</dependency>
		
		<!-- WEB end -->
	</dependencies>

	<build>
		<finalName>liuhuatang</finalName>
		<!-- <outputDirectory>${webapp.dir}/WEB-INF/classes</outputDirectory> -->
		<!-- 指定编译后文件的存放路径，因为jetty默认src/main/webapp为 web应用的根目录而 maven compile 目标后的默认classpath 
			在target文件夹下，就造成jrebel.xml无法兼顾 jetty 默认的是webapp中的classes为 web 应用的根目录， 而maven 
			默认是target 目录所以需要修改该maven的默认classes目录。 -->
		<plugins>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.2.v20120308</version>
				<configuration>
					<!-- <contextXml>src/test/resources/jetty-contexts.xml</contextXml> -->
					<webAppConfig>
						<!-- 上下文设置 -->
						<contextPath>/</contextPath>
					</webAppConfig>
					 <connectors>  
			            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">  
			              <port>80</port>  
			              <maxIdleTime>60000</maxIdleTime>  
			            </connector>  
          			</connectors>  
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<stopKey>stop-jetty</stopKey>
					<stopPort>8080</stopPort>
					<contextXml>${project.basedir}/src/test/java/jetty-contexts.xml</contextXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
			</plugin>
			<!-- maven的核心插件之一 complier插件默认只支持编译Java 1.4，因此需要加上支持高版本jre的配置 -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
